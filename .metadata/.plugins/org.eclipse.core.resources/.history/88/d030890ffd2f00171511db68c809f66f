package patient;

import handler.HandlerFocus;
import handler.HandlerMotion;

import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.util.Date;

import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

import sqlconnection.SQLCon;
import net.proteanit.sql.DbUtils;

public class Patient extends JFrame {

	private Panel contentPane;
	private JTable table;
	private JScrollPane scrollPane;
	
	private JLabel lblPatientInfo;
	private JLabel lblLogo;
	private JLabel lblLogoIcon;
	private JLabel lblLogoIcon3;
	private JLabel lblLogoIcon2;
	private JLabel lblLogo_1;
	private JLabel lblDate;
	private JLabel label;
	private JLabel lblHeader;
	private JLabel lblID;
	private JLabel lblFirstName;
	private JLabel lblLastName;
	private JLabel lblPhone;
	private JLabel lblAge;
	private JLabel lblAddress;
	
	private JMenuBar menuBar;
	private JMenu mnFile;
	
	private JTextField txtSsn;
	private JTextField txtFirstName;
	private JTextField txtLastName;
	private JTextField txtPhone;
	private JTextField txtAge;
	private JLabel lblGender;
	
	private JRadioButton rdbtnMale;
	private JRadioButton rdbtnFemale;
	private JLabel lblMaritalStatus;
	
	private JComboBox cmMaritalStatus;	
	private JLabel lblWeight;
	private JTextField txtWeight;
	
	private JButton btnSave;
	private JButton btnDelete;
	private JButton btnClear;
	private JScrollPane scrollPane_1;
	private JTextArea textArea;
	
	private HandlerMotion HDM;
	private HandlerFocus HDF;

	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Patient frame = new Patient();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Patient() {
		setTitle("Patient Registration");
		setIconImage(Toolkit.getDefaultToolkit().getImage(Patient.class.getResource("/Images/hos.png")));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(1378, 740);
		setLocationRelativeTo(null);
		HDM =  new HandlerMotion();
		HDF = new HandlerFocus();
		createFrame();
	}
	
	private void createFrame(){
		
		menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		

		JMenu mnPatientRegistration = new JMenu("Patient Registration");
		menuBar.add(mnPatientRegistration);
		
		JMenuItem mntmPatientRegisrations = new JMenuItem("Patient regisrations");
		mnPatientRegistration.add(mntmPatientRegisrations);
		
		JMenuItem mntmSearchPatientDetails = new JMenuItem("Search Patient details");
		mnPatientRegistration.add(mntmSearchPatientDetails);
		
		JMenu mnDoctorManagement = new JMenu("Doctor management");
		menuBar.add(mnDoctorManagement);
		
		JMenuItem mntmDoctorInformation = new JMenuItem("doctor information");
		mnDoctorManagement.add(mntmDoctorInformation);
		
		JMenuItem mntmPatientStatus = new JMenuItem("patient status");
		mnDoctorManagement.add(mntmPatientStatus);
		
		JMenuItem mntmChangePassword = new JMenuItem("change password");
		mnDoctorManagement.add(mntmChangePassword);
		
		JMenu mnPharmacyManagement = new JMenu("Pharmacy management");
		menuBar.add(mnPharmacyManagement);
		
		JMenuItem mntmMedicamentInformation = new JMenuItem("medicament information");
		mnPharmacyManagement.add(mntmMedicamentInformation);
		
		JMenuItem mntmChangePassword_1 = new JMenuItem("change password");
		mnPharmacyManagement.add(mntmChangePassword_1);
		
		JMenu mnInvestigations = new JMenu("Investigations");
		menuBar.add(mnInvestigations);
		
		JMenuItem mntmInvestigationType = new JMenuItem("investigation type");
		mnInvestigations.add(mntmInvestigationType);
		
		JMenuItem mntmPatientStatus_1 = new JMenuItem("patient status");
		mnInvestigations.add(mntmPatientStatus_1);
		
		JMenuItem mntmChangePassword_2 = new JMenuItem("change password");
		mnInvestigations.add(mntmChangePassword_2);
		
		JMenu mnNursing = new JMenu("Nursing");
		menuBar.add(mnNursing);
		
		JMenuItem mntmNurseInformation = new JMenuItem("nurse information");
		mnNursing.add(mntmNurseInformation);
		
		JMenuItem mntmPatientStatus_2 = new JMenuItem("patient status");
		mnNursing.add(mntmPatientStatus_2);
		
		JMenuItem mntmChangePassword_3 = new JMenuItem("change password");
		mnNursing.add(mntmChangePassword_3);
		
		JMenu mnAdminManagement = new JMenu("Admin management");
		menuBar.add(mnAdminManagement);
		
		JMenuItem mntmDoctorInformation_1 = new JMenuItem("doctor information");
		mnAdminManagement.add(mntmDoctorInformation_1);
		
		JMenuItem mntmNurseInformation_1 = new JMenuItem("nurse information");
		mnAdminManagement.add(mntmNurseInformation_1);
		
		JMenuItem mntmPharmacyInformation = new JMenuItem("pharmacy information");
		mnAdminManagement.add(mntmPharmacyInformation);
		
		JMenuItem mntmInvestigationInformation = new JMenuItem("investigation information");
		mnAdminManagement.add(mntmInvestigationInformation);
		
		JMenuItem mntmPatientInformation = new JMenuItem("patient information");
		mnAdminManagement.add(mntmPatientInformation);
		
		JMenuItem mntmChangePassword_4 = new JMenuItem("change password");
		mnAdminManagement.add(mntmChangePassword_4);
		
		JMenu mnReport = new JMenu(" Reports");
		menuBar.add(mnReport);
		
		JMenuItem mntmPatientReport = new JMenuItem("patient report");
		mnReport.add(mntmPatientReport);
		
		JMenuItem mntmPharmacyReport = new JMenuItem("pharmacy report");
		mnReport.add(mntmPharmacyReport);
		
		JMenuItem mntmLaundryReport = new JMenuItem("laundry report");
		mnReport.add(mntmLaundryReport);
		
		JMenu mnLaundryManagement = new JMenu("Laundry management");
		menuBar.add(mnLaundryManagement);

		

		
		
		mnFile = new JMenu("File ");
		menuBar.add(mnFile);
		contentPane = new Panel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(null);
		setContentPane(contentPane);
		
		//************************************************** LOGO *******************************************************************************
		
			    lblLogo = new JLabel("");
				lblLogo.setIcon(new ImageIcon(getClass().getResource("/Images/hos.png")));
				lblLogo.setBounds(1200, 0, 84, 64);
				contentPane.add(lblLogo);
				
				lblLogoIcon = new JLabel("");
				lblLogoIcon.setIcon(new ImageIcon(getClass().getResource("/Images/sh4.png")));
				lblLogoIcon.setBounds(188, 0, 40, 64);
				contentPane.add(lblLogoIcon);
				
			    lblLogoIcon3 = new JLabel("");
				lblLogoIcon3.setIcon(new ImageIcon(getClass().getResource("/Images/sh1.png")));
				lblLogoIcon3.setBounds(87, 0, 40, 64);
				contentPane.add(lblLogoIcon3);
				
				lblLogoIcon2 = new JLabel("");
				lblLogoIcon2.setIcon(new ImageIcon(getClass().getResource("/Images/sh2.png")));
				lblLogoIcon2.setBounds(137, 0, 40, 64);
				contentPane.add(lblLogoIcon2);
				
				lblLogo_1 = new JLabel("logo2");
				lblLogo_1.setIcon(new ImageIcon(getClass().getResource("/Images/log2.png")));
				lblLogo_1.setBounds(390, 0, 530, 64);
				contentPane.add(lblLogo_1);
				
			    lblDate = new JLabel(new Date()+"");
				lblDate.setFont(new Font("Tahoma", Font.BOLD | Font.ITALIC, 14));
				lblDate.setBounds(577, 74, 236, 26);
				contentPane.add(lblDate);
				
				lblHeader = new JLabel("");
				lblHeader.setIcon(new ImageIcon(getClass().getResource("/Images/header.png")));
				lblHeader.setBounds(0, 0, 1387, 78);
				contentPane.add(lblHeader);
				
				//***************************************Footer ************************************************
				
			    label = new JLabel("");
				label.setIcon(new ImageIcon(getClass().getResource("/Images/header.png")));
				label.setBounds(0, 629, 1387, 78);
				contentPane.add(label);
				
	//***************************************************Label information ***************************************************
				
				lblPatientInfo = new JLabel("Patient Information");
				lblPatientInfo.setIcon(new ImageIcon(getClass().getResource("/Images/sh2.png")));
				lblPatientInfo.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblPatientInfo.setBounds(87, 90, 225, 45);
				contentPane.add(lblPatientInfo);
				
				
				lblID = new JLabel("SSN : ");
				lblID.setForeground(new Color(25, 25, 112));
				lblID.setBackground(Color.LIGHT_GRAY);
				lblID.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblID.setBounds(219, 161, 109, 26);
				contentPane.add(lblID);
				
				lblFirstName = new JLabel("First Name");
				lblFirstName.setForeground(new Color(25, 25, 112));
				lblFirstName.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblFirstName.setBackground(Color.LIGHT_GRAY);
				lblFirstName.setBounds(219, 202, 109, 26);
				contentPane.add(lblFirstName);
				
				lblLastName = new JLabel("Last Name");
				lblLastName.setForeground(new Color(25, 25, 112));
				lblLastName.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblLastName.setBackground(Color.LIGHT_GRAY);
				lblLastName.setBounds(219, 242, 109, 26);
				contentPane.add(lblLastName);
				
				lblPhone = new JLabel("Phone");
				lblPhone.setForeground(new Color(25, 25, 112));
				lblPhone.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblPhone.setBackground(Color.LIGHT_GRAY);
				lblPhone.setBounds(219, 331, 109, 26);
				contentPane.add(lblPhone);
				
				lblAge = new JLabel("Age : ");
				lblAge.setForeground(new Color(25, 25, 112));
				lblAge.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblAge.setBackground(Color.LIGHT_GRAY);
				lblAge.setBounds(219, 378, 109, 26);
				contentPane.add(lblAge);
				
				lblAddress = new JLabel("Address");
				lblAddress.setForeground(new Color(25, 25, 112));
				lblAddress.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblAddress.setBackground(Color.LIGHT_GRAY);
				lblAddress.setBounds(842, 149, 78, 26);
				contentPane.add(lblAddress);
				
				
				
	// ************************************* Table Information ***************************************************
				
				scrollPane = new JScrollPane();
				scrollPane.setBounds(87, 450, 1116, 180);
				contentPane.add(scrollPane);
			//	ResultSet rs = SQLCon.SQLConnection("select * from doctor") ;
				table = new JTable(){
					public Component prepareRenderer(TableCellRenderer r,int data,int column){
						Component c = super.prepareRenderer(r,data,column);
						if(data % 2 == 0){
							c.setBackground(Color.white);
							c.setForeground(Color.black);
						}else{
							c.setBackground(Color.LIGHT_GRAY);
							c.setForeground(new Color(200,60,50));
						}
						return c;
					}
					
				};
				table.setModel(new DefaultTableModel(
					new Object[][] {
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
						{null, null, null, null, null, null, null, null},
					},
					new String[] {
						"New column", "New column", "New column", "New column", "New column", "New column", "New column", "New column"
					}
				));
				ResultSet rs = SQLCon.SQLConnection("select * from patient");
				table.setModel(DbUtils.resultSetToTableModel(rs));
			
				table.addMouseListener(new MouseAdapter() {
					public void mouseClicked(MouseEvent e){
						btnSave.setText("Update");
						txtSsn.setEditable(false);
						int row = table.getSelectedRow();
						txtSsn.setText(table.getValueAt(row, 0).toString());
						txtFirstName.setText(table.getValueAt(row, 1).toString().split(" ")[0]);
						txtLastName.setText(table.getValueAt(row, 1).toString().split(" ")[1]);
						if(table.getValueAt(row, 2).toString().equals("female")) rdbtnFemale.setSelected(true);
						else if(table.getValueAt(row, 2).toString().equals("male")) rdbtnMale.setSelected(true);
						txtPhone.setText(table.getValueAt(row, 3).toString());
						txtAge.setText(table.getValueAt(row, 4).toString());
						textArea.setText(table.getValueAt(row, 5).toString());
						
						 cmMaritalStatus.setSelectedItem(table.getValueAt(row, 6));
						
						txtWeight.setText(table.getValueAt(row, 7).toString());
						
					}
				});
				scrollPane.setViewportView(table);
				
	//****************************************** TXT Patient Information ************************************************
				txtSsn = new JTextField();
				txtSsn.setForeground(Color.BLACK);
				txtSsn.addFocusListener(HDF);
				txtSsn.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtSsn.setBackground(Color.WHITE);
				txtSsn.setBounds(363, 158, 264, 26);
				contentPane.add(txtSsn);
				txtSsn.setColumns(10);
				
				txtFirstName = new JTextField();
				txtFirstName.setForeground(Color.BLACK);
				txtFirstName.addFocusListener(HDF);
				txtFirstName.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtFirstName.setBackground(Color.WHITE);
				txtFirstName.setColumns(10);
				txtFirstName.setBounds(363, 206, 264, 26);
				contentPane.add(txtFirstName);
				
				txtLastName = new JTextField();
				txtLastName.setForeground(Color.BLACK);
				txtLastName.addFocusListener(HDF);
				txtLastName.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtLastName.setBackground(Color.WHITE);
				txtLastName.setColumns(10);
				txtLastName.setBounds(363, 246, 264, 26);
				contentPane.add(txtLastName);
				
				txtPhone = new JTextField();
				txtPhone.setForeground(Color.BLACK);
				txtPhone.addFocusListener(HDF);
				txtPhone.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtPhone.setBackground(Color.WHITE);
				txtPhone.setColumns(10);
				txtPhone.setBounds(363, 335, 264, 26);
				contentPane.add(txtPhone);
				
				txtAge = new JTextField();
				txtAge.setForeground(Color.BLACK);
				txtAge.addFocusListener(HDF);
				txtAge.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtAge.setBackground(Color.WHITE);
				txtAge.setColumns(10);
				txtAge.setBounds(363, 382, 264, 26);
				contentPane.add(txtAge);
				
				lblGender = new JLabel("Gender");
				lblGender.setForeground(new Color(25, 25, 112));
				lblGender.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblGender.setBackground(Color.LIGHT_GRAY);
				lblGender.setBounds(219, 287, 66, 24);
				contentPane.add(lblGender);
				
				//******************************* radioButton male female *********************************
				
				rdbtnMale = new JRadioButton("Male");
				rdbtnMale.setForeground(Color.WHITE);
				rdbtnMale.setSelected(true);
				rdbtnMale.setFont(new Font("Times New Roman", Font.BOLD | Font.ITALIC, 15));
				rdbtnMale.setBackground(new Color(30,60,80));
				rdbtnMale.setOpaque(true);
				rdbtnMale.setBounds(363, 288, 79, 23);
				contentPane.add(rdbtnMale);
				
				rdbtnFemale = new JRadioButton("Female");
				rdbtnFemale.setForeground(Color.WHITE);
				rdbtnFemale.setFont(new Font("Times New Roman", Font.BOLD | Font.ITALIC, 15));
				rdbtnFemale.setBackground(new Color(30,60,80));
				rdbtnFemale.setBounds(444, 288, 84, 23);
				contentPane.add(rdbtnFemale);
				
				ButtonGroup btnGroup = new ButtonGroup();
				btnGroup.add(rdbtnFemale);
				btnGroup.add(rdbtnMale);
				
				lblMaritalStatus = new JLabel("Marital Status");
				lblMaritalStatus.setForeground(new Color(25, 25, 112));
				lblMaritalStatus.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblMaritalStatus.setBackground(Color.LIGHT_GRAY);
				lblMaritalStatus.setBounds(666, 278, 123, 26);
				contentPane.add(lblMaritalStatus);
				
			    cmMaritalStatus = new JComboBox();
				cmMaritalStatus.setFont(new Font("Times New Roman", Font.BOLD | Font.ITALIC, 15));
				cmMaritalStatus.setForeground(Color.WHITE);
				cmMaritalStatus.setBackground(new Color(30,60,90));
				cmMaritalStatus.setModel(new DefaultComboBoxModel(new String[] {"-Select-", "Married", "Single"}));
				cmMaritalStatus.setBounds(810, 280, 325, 23);
				contentPane.add(cmMaritalStatus);
				
				lblWeight = new JLabel("Weight");
				lblWeight.setForeground(new Color(25, 25, 112));
				lblWeight.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				lblWeight.setBackground(Color.LIGHT_GRAY);
				lblWeight.setBounds(666, 315, 109, 26);
				contentPane.add(lblWeight);
				
				txtWeight = new JTextField();
				txtWeight.setForeground(Color.BLACK);
				txtWeight.addFocusListener(HDF);
				txtWeight.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				txtWeight.setBackground(Color.WHITE);
				txtWeight.setColumns(10);
				txtWeight.setBounds(810, 319, 325, 26);
				contentPane.add(txtWeight);
	
                
				btnSave = new JButton("Save");
				btnSave.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent arg0) {
					
					if(btnSave.getText().equals("Update")){
						
						String gender = "male";
						if(rdbtnMale.isSelected()) gender = "male";
						else if (rdbtnFemale.isSelected()) gender = "female";
						
						String marital = cmMaritalStatus.getSelectedItem().toString();
						
						String sql = "update patient set Name = '"+txtFirstName.getText()+" "+txtLastName.getText()+"',"
								+ "gender = '"+gender+"',phone = "+Double.parseDouble(txtPhone.getText())+",age = "+Integer.parseInt(txtAge.getText())
								+",address = '"+textArea.getText()+"',marital_status = '"+marital+"',weight = "+Integer.parseInt(txtWeight.getText())+" WHERE SSN = "+Integer.parseInt(txtSsn.getText());
						
						SQLCon.SQLConn(sql);
						table.setModel(DbUtils.resultSetToTableModel(SQLCon.SQLConnection("select * from patient")));
						btnSave.setText("Save");
						txtSsn.setEditable(true);
						JOptionPane.showMessageDialog(null, "Update done");
						
					}else{
						
					if(txtSsn.getText().equals("")||txtFirstName.getText().equals("")||txtLastName.getText().equals("")||txtPhone.getText().equals("")||txtAge.getText().equals("")||textArea.getText().equals("")||cmMaritalStatus.getSelectedItem().toString().equals("-Select-")||txtWeight.getText().equals(""))
					{
						JOptionPane.showMessageDialog(null, "please fill all fields ");
						return;
					}else{
						String gender = "male";
						if(rdbtnMale.isSelected()) gender = "male";
						else if (rdbtnFemale.isSelected()) gender = "female";
						
						String marital = cmMaritalStatus.getSelectedItem().toString();
						
						String sql ="insert into patient (SSN,name,gender,phone,age,address,marital_status,weight)"
					+ "values("+Integer.parseInt(txtSsn.getText())+",'"+txtFirstName.getText()+" "+txtLastName.getText()+"','"+gender+"',"+Double.parseDouble(txtPhone.getText())+","+Integer.parseInt(txtAge.getText())+",'"+textArea.getText()+"','"+marital+"',"+Integer.parseInt(txtWeight.getText())+")";
						
						SQLCon.SQLConn(sql);
						table.setModel(DbUtils.resultSetToTableModel(SQLCon.SQLConnection("select * from patient")));
						JOptionPane.showMessageDialog(null, "done");
						
					}
				  }
				}
			});
			
					btnSave.setForeground(Color.WHITE);
					
					btnSave.setBackground(new Color(20,60,80));
					btnSave.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
					btnSave.setBounds(652, 369, 154, 39);
					contentPane.add(btnSave);
					btnSave.addMouseListener(HDM);
					
					
				
				btnDelete = new JButton("Delete");
				btnDelete.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						 int val = JOptionPane.showConfirmDialog(null, "Do you realy want to delete");
			                if (val == 0)
			                {
			                	String sql_delete="delete from patient where SSN=" + Integer.parseInt(txtSsn.getText());
			    		     	SQLCon.SQLConn(sql_delete);
			    			    ResultSet rs = SQLCon.SQLConnection("select * from patient");
			    			    table.setModel(DbUtils.resultSetToTableModel(rs));
			    				
			    		        JOptionPane.showMessageDialog(null, "DELETED successfully");
			                }
			                else
			                {
			                	JOptionPane.showMessageDialog(null,"wrong choice ");
			                }
						
				
					}
			});
				btnDelete.setForeground(Color.WHITE);
				btnDelete.addMouseListener(HDM);
				btnDelete.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				btnDelete.setBackground(new Color(120, 40, 60));
				btnDelete.setBounds(981, 369, 154, 39);
				contentPane.add(btnDelete);
				
				btnClear = new JButton("Clear");
				btnClear.addActionListener(new ActionListener() {
					
					public void actionPerformed(ActionEvent arg0) {
						btnSave.setText("Save");
						txtSsn.setEditable(true);
						txtSsn.setText("");
						txtFirstName.setText("");
						txtLastName.setText("");
						txtAge.setText("");
						txtPhone.setText("");
						txtWeight.setText("");
						cmMaritalStatus.setSelectedIndex(0);
						textArea.setText("");
						rdbtnMale.setSelected(true);
						
					}
				});
				btnClear.setForeground(Color.WHITE);
				btnClear.addMouseListener(HDM);
				btnClear.setFont(new Font("Georgia", Font.BOLD | Font.ITALIC, 15));
				btnClear.setBackground(new Color(20, 90, 80));
				btnClear.setBounds(817, 369, 154, 39);
				contentPane.add(btnClear);
				
				btnClear = new JButton("Clear");
		     	btnClear.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						int SSN=Integer.parseInt(txtSsn.getText());
						String FirstName=txtFirstName.getText();
						String LastName=txtLastName.getText();
						String gender=lblGender.getText();
						int Phone=Integer.parseInt(txtPhone.getText());
						int Age=Integer.parseInt(txtAge.getText());
						String Addess=textArea.getText();
						String MaritalStatus=lblMaritalStatus.getText();
						int Weight=Integer.parseInt(txtWeight.getText());
			         
						
					}
				});
				btnClear.addMouseListener(HDM);
				
				scrollPane_1 = new JScrollPane();
				scrollPane_1.setBounds(666, 173, 463, 87);
				contentPane.add(scrollPane_1);
				
				textArea = new JTextArea();
				textArea.addFocusListener(HDF);
				textArea.setWrapStyleWord(true);
				textArea.setRows(4);
				textArea.setLineWrap(true);
				textArea.setForeground(Color.BLACK);
				textArea.setFont(new Font("Times New Roman", Font.ITALIC, 17));
				textArea.setColumns(10);
				textArea.setBackground(Color.WHITE);
				scrollPane_1.setViewportView(textArea);
	//**********************************************************************************************************************
		
	}
}
