package hospitalProject;



import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author Ahmed selemou
 */
public class Patientforreception extends JFrame {

    Connection conn = null;
    PreparedStatement stat = null;
    ResultSet rst = null;
    private String years[] = {"2010", "2011", "2012", "2013", "2014", "2015", "2016"};
    private String months[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"};
    private String days[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"};
    private String gend[] = {"Male", "Female"};
    private String special[] = {"doctor", "nurse", "pharmacy", "x-ray", "reception", "lab", "admin", "accountancy"};
    private String group[] = {"A+", "A-", "B+", "B-", "O+", "O-"};
    private String type[] = {"1", "2", "3", "4"};
    private JLabel patientid = new JLabel("patient ID");
    private JLabel name = new JLabel("name");
    private JLabel fathername = new JLabel("father name");
    private JLabel familyname = new JLabel("family name");
    private JLabel mobile = new JLabel("mobile");
    private JLabel age = new JLabel("age");
    private JLabel address = new JLabel("address");
    private JLabel roomno = new JLabel(" Room No");
    private JLabel department = new JLabel("department");
    private JLabel gender = new JLabel("gender");
    private JLabel bloodgroup = new JLabel("blood group");
    private JLabel roomtype = new JLabel("Room Type");
    private JLabel dateofjoining = new JLabel("Date of joining");
    private JLabel remarkfromaccountancy = new JLabel(" patient status");
    private JLabel remarkfromdoctor = new JLabel("doctor remark");
    private JLabel status = new JLabel("accountancy remark");
    private JLabel email = new JLabel("email");
    private JTextField f1 = new JTextField();
    private JTextField f2 = new JTextField();
    private JTextField f3 = new JTextField();
    private JTextField f4 = new JTextField();
    private JTextField f5 = new JTextField();
    private JTextField f6 = new JTextField();
    private JTextField f7 = new JTextField();
    private JTextField f8 = new JTextField();
    private JTextField f9 = new JTextField();
    private JComboBox box1 = new JComboBox(gend);
    private JComboBox box2 = new JComboBox(group);
    private JComboBox box3 = new JComboBox(type);
    private JComboBox box4 = new JComboBox(special);
    private JComboBox box5 = new JComboBox(years);
    private JComboBox box6 = new JComboBox(months);
    private JComboBox box7 = new JComboBox(days);
    private JButton delete = new JButton("Delete");
    private JButton Add = new JButton("Add");
    private JButton update = new JButton("update");
    private JButton getdata = new JButton("Get data");
    private JButton New = new JButton("New");
    private JButton save = new JButton("save");
    private JTextArea a1 = new JTextArea();
    private JTextArea a2 = new JTextArea();
    private JTextArea a3 = new JTextArea();
    private JPanel panel = new JPanel();
    private JLabel background = new JLabel();

    public Patientforreception() {
        conn = Connect.connect();
        doing();
    }

    public void doing() {

        setTitle("Patientforreception");
        setSize(900, 800);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        panel.setSize(400, 300);
        panel.setLayout(null);
        panel.setBackground(Color.orange);
        background.setBounds(0, 0, getWidth(), getHeight());
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("hos.jpg")));
        patientid.setBounds(20, 20, 100, 20);
        name.setBounds(20, 40, 100, 20);
        fathername.setBounds(20, 60, 100, 20);
        familyname.setBounds(20, 80, 100, 20);
        mobile.setBounds(20, 100, 100, 20);
        age.setBounds(20, 120, 100, 20);
        email.setBounds(20, 140, 100, 20);
        address.setBounds(20, 160, 100, 20);
        roomno.setBounds(20, 180, 100, 20);
        gender.setBounds(20, 200, 100, 20);
        bloodgroup.setBounds(20, 220, 100, 20);
        department.setBounds(20, 240, 100, 20);
        roomtype.setBounds(20, 260, 100, 20);
        dateofjoining.setBounds(20, 280, 100, 20);
        f1.setBounds(140, 20, 100, 20);
        f2.setBounds(140, 40, 100, 20);
        f3.setBounds(140, 60, 100, 20);
        f4.setBounds(140, 80, 100, 20);
        f5.setBounds(140, 100, 100, 20);
        f6.setBounds(140, 120, 100, 20);
        f7.setBounds(140, 140, 100, 20);
        f8.setBounds(140, 160, 100, 20);
        f9.setBounds(140, 180, 100, 20);
        box1.setBounds(140, 200, 100, 20);
        box2.setBounds(140, 220, 100, 20);
        box3.setBounds(140, 240, 100, 20);
        box4.setBounds(140, 260, 100, 20);
        box5.setBounds(140, 280, 100, 20);
        box6.setBounds(260, 280, 100, 20);
        box7.setBounds(390, 280, 100, 20);
       // remarkfromaccountancy.setBounds(20, 320, 190, 20);
        a1.setBounds(250, 320, 150, 70);
       // remarkfromdoctor.setBounds(20, 500, 190, 20);
        a2.setBounds(250, 450, 150, 70);
        status.setBounds(20, 600, 100, 20);
        a3.setBounds(250, 580, 150, 70);
        delete.setBounds(360, 170, 80, 20);
        Add.setBounds(360, 20, 80, 20);
        update.setBounds(360, 50, 80, 20);
        getdata.setBounds(360, 80, 80, 20);
        New.setBounds(360, 110, 80, 20);
        save.setBounds(360, 140, 80, 20);

        panel.add(patientid);
        panel.add(name);
        panel.add(fathername);
        panel.add(familyname);
        panel.add(mobile);
        panel.add(age);
        panel.add(email);
        panel.add(address);
       // panel.add(roomno);
        panel.add(gender);
        panel.add(bloodgroup);
        panel.add(department);
        //panel.add(roomtype);
        //panel.add(dateofjoining);
        panel.add(f1);
        panel.add(f2);
        panel.add(f3);
        panel.add(f4);
        panel.add(f5);
        panel.add(f6);
        panel.add(f7);
        panel.add(f8);
        //panel.add(f9);
       // panel.add(remarkfromaccountancy);
        //panel.add(remarkfromdoctor);
        //panel.add(status);
        //panel.add(a1);
        //panel.add(a2);
        //panel.add(a3);
        panel.add(box1);
        panel.add(box2);
        panel.add(box3);
        //panel.add(box4);
        //panel.add(box5);
        //panel.add(box6);
        //panel.add(box7);
        panel.add(delete);
        panel.add(Add);
        panel.add(update);
       // panel.add(getdata);
        panel.add(New);
        //panel.add(save);
        // panel.Add(background);
        this.add(panel);
        Add.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (f1.getText().equals("") || f2.getText().equals("") || f3.getText().equals("") || f4.getText().equals("") || f5.getText().equals("") || f6.getText().equals("") || f7.getText().equals("") || f8.getText().equals("")) {
                   // System.out.println("please fill empty fields");
                     JOptionPane.showMessageDialog(null, "please fill empty fields");
                    return;
                }

                try {
                    
                     String sql="select patientid from patient where patientid ='"+f1.getText()+"'";  
                     stat=conn.prepareStatement(sql);
                     rst=stat.executeQuery();
                     if(rst.next())
                     {
                     JOptionPane.showMessageDialog(null,"the id you search for is exist");
                     return;
                     }
                    
                 
                  String sql2 = "INSERT INTO patient(patientid,name,fathername,familyname,mobile,age,email,address,gender,bloodgroup,department)"
                            + " VALUES (" + Integer.parseInt(f1.getText()) + ",'" + f2.getText() + "','" + f3.getText() + "','" + f4.getText() + "'," + Integer.parseInt(f5.getText()) + "," + Integer.parseInt(f6.getText()) + ",'" + f7.getText() + "','" + f8.getText() + "','"+box1.getSelectedItem()+"','"+box2.getSelectedItem()+"','"+box3.getSelectedItem()+"')";
                    System.out.println(sql2);
                    stat = conn.prepareStatement(sql2);
                    System.out.println("after prepar");
                    stat.execute();
                    System.out.println("excute");
                    JOptionPane.showMessageDialog(null, "added succefully in reception");

                } catch (SQLException ex) {
                    System.out.println("this is exception : "+ex.getMessage());
                } 

            }

        });
        delete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
            if (f1.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Enter your ID");
                }
                Connect.connect();
                try
                {
                String sql="select patientid from patient where patientid ='"+f1.getText()+"'";  
                     stat=conn.prepareStatement(sql);
                     rst=stat.executeQuery();
                     if(rst.next())
                     {
                      String sql2 = "delete from patient where patientid='" + f1.getText() + "'";
                            conn = Connect.connect();
                            stat = conn.prepareStatement(sql2);
                            stat.execute();
                            JOptionPane.showMessageDialog(null, "DELETED successfully");
                     }
                     else
                     {
                         JOptionPane.showMessageDialog(null,"sorry the patient you search for does not exist");
                     }
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null,ex.getMessage());
                }
            
            }
        });
        New.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
            reset();
                 
            }
        });
       update.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
              if (f1.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Enter your ID");
                }
                Connect.connect();
               // String sql="select patientid from patient where patientid='"+f1.getText()+"'";
                try
                {
                String sql="select patientid from patient where patientid ='"+f1.getText()+"'";  
                     stat=conn.prepareStatement(sql);
                     rst=stat.executeQuery();
                     if(rst.next())
                     {
                         String sql2 = "update patient set patientid='" + f1.getText().toString() + "',name='" + f2.getText().toString() + "',fathername='" + f3.getText().toString() + "',familyname='" + f4.getText().toString() + "',mobile='" + f5.getText() + "',age='" + f6.getText().toString() + "',email='" + f7.getText().toString() + "',address='" + f8.getText().toString() + "',gender='" + box1.getSelectedItem()+"',bloodgroup='" + box2.getSelectedItem() + "',department='" + box3.getSelectedItem() + "'where patientid='" + f1.getText() + "'";
                            stat = conn.prepareStatement(sql2);
                            stat.execute();
                            JOptionPane.showMessageDialog(null, "UPDATED Successfully");
                     }
                }
                catch(Exception ex)
                {
                   JOptionPane.showMessageDialog(null,ex.getMessage());
                }
                
            
            }
        });
       

    }
     protected void reset() {
        f1.setText("");
        f2.setText("");
        f3.setText("");
        f4.setText("");
        f5.setText("");
        f6.setText("");
        f7.setText("");
        f8.setText("");
        box1.setSelectedIndex(-1);
        box2.setSelectedIndex(-1);
        box3.setSelectedIndex(-1);
       
    }
     

    public static void main(String[] args) {
        new Patientforreception();
    }
}

